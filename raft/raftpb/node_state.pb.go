// Code generated by protoc-gen-gogo.
// source: raft/raftpb/node_state.proto
// DO NOT EDIT!

package raftpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// (etcd raft.StateType)
type NODE_STATE int32

const (
	NODE_STATE_FOLLOWER       NODE_STATE = 0
	NODE_STATE_PRE_CANDIDATE  NODE_STATE = 1
	NODE_STATE_CANDIDATE      NODE_STATE = 2
	NODE_STATE_LEADER         NODE_STATE = 3
	NODE_STATE_NUM_NODE_STATE NODE_STATE = 4
)

var NODE_STATE_name = map[int32]string{
	0: "FOLLOWER",
	1: "PRE_CANDIDATE",
	2: "CANDIDATE",
	3: "LEADER",
	4: "NUM_NODE_STATE",
}
var NODE_STATE_value = map[string]int32{
	"FOLLOWER":       0,
	"PRE_CANDIDATE":  1,
	"CANDIDATE":      2,
	"LEADER":         3,
	"NUM_NODE_STATE": 4,
}

func (x NODE_STATE) String() string {
	return proto.EnumName(NODE_STATE_name, int32(x))
}
func (NODE_STATE) EnumDescriptor() ([]byte, []int) { return fileDescriptorNodeState, []int{0} }

func init() {
	proto.RegisterEnum("raftpb.NODE_STATE", NODE_STATE_name, NODE_STATE_value)
}

func init() { proto.RegisterFile("raft/raftpb/node_state.proto", fileDescriptorNodeState) }

var fileDescriptorNodeState = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x29, 0x4a, 0x4c, 0x2b,
	0xd1, 0x07, 0x11, 0x05, 0x49, 0xfa, 0x79, 0xf9, 0x29, 0xa9, 0xf1, 0xc5, 0x25, 0x89, 0x25, 0xa9,
	0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x6c, 0x10, 0x09, 0x29, 0xdd, 0xf4, 0xcc, 0x92, 0x8c,
	0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0xfd, 0xf4, 0xfc, 0xf4, 0x7c, 0x7d, 0xb0, 0x74, 0x52, 0x69,
	0x1a, 0x98, 0x07, 0xe6, 0x80, 0x59, 0x10, 0x6d, 0x5a, 0x31, 0x5c, 0x5c, 0x7e, 0xfe, 0x2e, 0xae,
	0xf1, 0xc1, 0x21, 0x8e, 0x21, 0xae, 0x42, 0x3c, 0x5c, 0x1c, 0x6e, 0xfe, 0x3e, 0x3e, 0xfe, 0xe1,
	0xae, 0x41, 0x02, 0x0c, 0x42, 0x82, 0x5c, 0xbc, 0x01, 0x41, 0xae, 0xf1, 0xce, 0x8e, 0x7e, 0x2e,
	0x9e, 0x2e, 0x8e, 0x21, 0xae, 0x02, 0x8c, 0x42, 0xbc, 0x5c, 0x9c, 0x08, 0x2e, 0x93, 0x10, 0x17,
	0x17, 0x9b, 0x8f, 0xab, 0xa3, 0x8b, 0x6b, 0x90, 0x00, 0xb3, 0x90, 0x10, 0x17, 0x9f, 0x5f, 0xa8,
	0x6f, 0x3c, 0xc2, 0x34, 0x01, 0x16, 0x27, 0x91, 0x13, 0x0f, 0xe5, 0x18, 0x4e, 0x3c, 0x92, 0x63,
	0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x19, 0x8f, 0xe5, 0x18, 0x92, 0xd8, 0xc0,
	0x56, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xac, 0xf7, 0x7f, 0xd1, 0x00, 0x00, 0x00,
}
